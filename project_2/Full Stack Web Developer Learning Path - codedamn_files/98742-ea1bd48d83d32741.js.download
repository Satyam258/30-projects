"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[98742],{98742:function(e,n,t){t.d(n,{G:function(){return J}});var o,i=t(97458),r=t(52983),a=t(96230),s=t(90249),c=t(87978),p=t(91319),l=t(60443),u=t(24605),m=t(17688),d=t(47904),v=t.n(d),w=t(14517),f=t(5041),h=t(26667),g=t(25846),P=t(37710),y=t(24737);let C=!1;function _(e){let{siteBannerData:n,onClose:t}=e,o=(0,g.X)("hide-site-banner");return((0,r.useEffect)(()=>{C=!0},[]),null==n||null==o&&!1===C||(null==o?void 0:o.value)==="yes")?null:(0,i.jsx)("div",{id:"banner",className:(0,w.default)("relative top-0 z-[500] w-full self-start px-2 py-1 sm:px-3 sm:py-2","bg-[#eceb98]"),children:(0,i.jsx)("div",{className:"mx-auto max-w-7xl px-3 sm:px-6 lg:px-8",children:(0,i.jsxs)("div",{className:"relative flex flex-wrap",children:[(0,i.jsxs)("div",{className:"mx-auto flex flex-col grow flex-wrap items-center justify-center gap-2 text-center text-[15px] font-medium lg:w-10/12",children:[(0,i.jsx)("div",{className:"inline text-black",children:(0,i.jsx)(y.A,{className:"prose !max-w-none text-black text-[15px]",dangerouslySetHtmlContentWhichIsConvertedFromMarkdown:n.bannerText})}),(0,i.jsx)(f.rU,{unsafeHref:n.ctaButtonUrl,children:(0,i.jsx)(P.z,{size:"default",variant:"outline",children:n.ctaButtonText})})]}),(0,i.jsx)("div",{className:"absolute -right-4 top-1/2 -translate-y-1/2 lg:right-0",children:(0,i.jsxs)("button",{type:"button",className:"flex rounded-md p-1.5 focus:outline-none focus:ring-2 focus:ring-white hover:bg-[#acab6e]",onClick:function(){t(),null==o||o.setValue("yes")},children:[(0,i.jsx)("span",{className:"sr-only",children:"Dismiss"}),(0,i.jsx)(h.oHP,{className:"h-4 w-4","aria-hidden":"true"})]})})]})})})}var b=t(78949),k=t(3384),L=t(42016),N=t(49335);let S="user",A="get-sticky-banner-data",E="".concat(S,"-").concat(A),x=e=>({context:{namespace:S,functionName:A},data:e}),q=async e=>{let n;let t=x(e),o=(0,N.R9)()||null,i=(0,N.Qv)()||null,r=(0,a.gc)()||null;try{n=await k.ZP.request({method:"POST",baseURL:(0,L.hV)(),data:{organizationId:o,fermionSchoolId:i,authToken:r,data:[t]}}).then(e=>e.data).then(e=>{var n;return(null===(n=e.at(0))||void 0===n?void 0:n.output)||null})}catch(e){throw{errorMessage:(null==e?void 0:e.message)||"Something went wrong while making this request. Please try again or contact support@codedamn.com",isNetworkError:!0}}if(!n)throw{errorMessage:"Something went wrong while making this request. Please try again or contact support@codedamn.com",isNetworkError:!1};if("ok"===n.status)return n.data;throw{...n,isNetworkError:!1}},I=async e=>{let{data:n,forceOverrideAuthToken:t,shouldEnableBatching:o=!0}=e;if(!o)return await q(n);{let e=x(n),o=(0,L.NZ)(n),i=(0,N.R9)()||null,r=(0,N.Qv)()||null,s=t||(0,a.gc)()||null;return await L.CX.fetch({batchingUniqueKey:o,organizationId:i,fermionSchoolId:r,authToken:s,data:e}).then(e=>e)}},R=(e,n)=>(0,b.a)({queryKey:[E,x(e)],queryFn:()=>I({data:e}),...null!=n?n:{}});var H=t(64112),T=t(38759),B=t(74222),D=t(62403),M=t(3752),F=t(52071),j=t(16903);let O="user",W="mark-as-active-today",V="".concat(O,"-").concat(W),U=e=>({context:{namespace:O,functionName:W},data:e}),X=async e=>{let n;let t=U(e),o=(0,N.R9)()||null,i=(0,N.Qv)()||null,r=(0,a.gc)()||null;try{n=await k.ZP.request({method:"POST",baseURL:(0,L.hV)(),data:{organizationId:o,fermionSchoolId:i,authToken:r,data:[t]}}).then(e=>e.data).then(e=>{var n;return(null===(n=e.at(0))||void 0===n?void 0:n.output)||null})}catch(e){throw{errorMessage:(null==e?void 0:e.message)||"Something went wrong while making this request. Please try again or contact support@codedamn.com",isNetworkError:!0}}if(!n)throw{errorMessage:"Something went wrong while making this request. Please try again or contact support@codedamn.com",isNetworkError:!1};if("ok"===n.status)return n.data;throw{...n,isNetworkError:!1}},K=async e=>{let{data:n,forceOverrideAuthToken:t,shouldEnableBatching:o=!0}=e;if(!o)return await X(n);{let e=U(n),o=(0,L.NZ)(n),i=(0,N.R9)()||null,r=(0,N.Qv)()||null,s=t||(0,a.gc)()||null;return await L.CX.fetch({batchingUniqueKey:o,organizationId:i,fermionSchoolId:r,authToken:s,data:e}).then(e=>e)}},z=(e,n)=>(0,b.a)({queryKey:[V,U(e)],queryFn:()=>K({data:e}),...null!=n?n:{}});a.kc&&c.dV.isPluginAvailable("Keyboard")&&(s.N1.setAccessoryBarVisible({isVisible:!0}).catch(console.error),s.N1.addListener("keyboardDidShow",e=>{let n=document.getElementById("root-wrapper");n&&(n.style.paddingBottom="".concat(e.keyboardHeight-35,"px"));let t=document.getElementById("mobile-scrollable");t&&(t.style.paddingBottom="".concat(e.keyboardHeight-35,"px"))}).catch(console.error),s.N1.addListener("keyboardDidHide",()=>{let e=document.getElementById("root-wrapper");e&&(e.style.paddingBottom="0px");let n=document.getElementById("mobile-scrollable");n&&(n.style.paddingBottom="0px")}).catch(console.error));{let e;function Z(n){clearTimeout(e),e=n}p.F0.events.on("routeChangeStart",e=>{if(a.kc&&window.location.pathname!==e){let{writeProperty:e}=D.Z.getState();"mobile-app"===(0,N.E1)().websiteType&&Z(window.setTimeout(()=>{e({isLoading:!0})},200))}}),p.F0.events.on("routeChangeComplete",()=>{let{writeProperty:e}=D.Z.getState();a.kc&&"mobile-app"===(0,N.E1)().websiteType&&(Z(void 0),e({isLoading:!1}))})}try{a.kc&&(File.prototype.arrayBuffer=null!==(o=File.prototype.arrayBuffer)&&void 0!==o?o:function(){return new Promise(e=>{let n=new FileReader;n.onload=()=>{e(n.result)},n.readAsArrayBuffer(this)})})}catch(e){}let J=e=>{let{children:n,desktopSidebar:t,header:o,mobileSidebarTurnedNavigation:s,footer:c,rootDivClass:d}=e,h=(0,l.v)("utm_source")[0],g=(0,l.v)("utm_medium")[0],P=(0,l.v)("utm_campaign")[0],y=(0,T._)("utmSourceLS",{defaultValue:""}),C=(0,T._)("utmMediumLS",{defaultValue:""}),b=(0,T._)("utmCampaignLS",{defaultValue:""}),{data:k}=R({}),[L,S]=(0,r.useState)(null),{pathname:A}=(0,p.jD)();(0,r.useLayoutEffect)(()=>{if((null==k?void 0:k.bannerData)==null)return;let e=!1;for(let n of k.bannerData.blackListedPathRegularExpressions)try{if(new RegExp(n).test(A)){e=!0;break}}catch(e){console.error("Error with regexp",e)}e?S(null):S(k.bannerData)},[k,A]);let E=(0,H.M)(),x=(0,B.o)({shouldAlsoGetPastProMembership:!1,shouldApplyAdditionalBufferTime:!0,shouldSkip:"authorized"!==E.state||"codedamn-main-website"!==(0,N.E1)().websiteType}),q=(0,r.useRef)(!1);(0,r.useEffect)(()=>{if(q.current)return;let e=window.location.href,n=new URL(e),t=n.searchParams.get("force-auth-token");if(null!=t&&""!==t.trim()){q.current=!0,(0,M.a1)("Logging in... Please wait."),(0,F.v)({authToken:t}),n.searchParams.delete("force-auth-token"),"/force-auth"===n.pathname&&(n.pathname="/dashboard");let e=n.toString();(0,f.kD)(e)}},[]);let I=(0,r.useRef)(!1);(0,r.useEffect)(()=>{I.current||(I.current=!0,fetch("https://backend.codedamn.com/robots.txt").then(async e=>{let n=await e.text();403===e.status&&n.includes("Request blocked")&&(0,j.w)({shouldDisallowUserDismiss:!0,title:"Your IP address is restricted",message:(0,i.jsxs)(i.Fragment,{children:["Sorry but our system has detected dangerous abuse activity from this IP address. To preserve our systems, in accordance with our terms, our system has decided to block your access.",(0,i.jsx)("br",{}),(0,i.jsx)("br",{})," You ",(0,i.jsx)("b",{children:"will not"})," be able to use this website anymore from this IP address. If this is a mistake, please send an email to"," ",(0,i.jsx)("a",{href:"mailto:support@codedamn.com",className:"underline",children:"support@codedamn.com"})," ","immediately."]})})}).catch(()=>{}))},[]);let[D,O]=(0,l.v)("redirect-after-auth-url");return(0,r.useEffect)(()=>{(async function(){D&&(sessionStorage.setItem(a.Ks,D),await O(null))})()},[D,O]),(0,r.useEffect)(()=>{y&&C&&b&&(y.value||C.value||b.value||(y.setValue("no-utm-info"),b.setValue("internal-website-traffic"),C.setValue(window.location.href)),h&&y.setValue(h),g&&C.setValue(g),P&&b.setValue(P))},[P,b,g,C,h,y]),(0,r.useEffect)(()=>{if("codedamn-main-website"!==(0,N.E1)().websiteType&&"mobile-app"!==(0,N.E1)().websiteType)return;let e=window;if(e.$crisp){try{e.$crisp.push(["safe",!0]),"authorized"===E.state&&(e.$crisp.push(["set","user:email",[E.data.email]]),e.$crisp.push(["set","user:nickname",[E.data.name]]))}catch(e){console.error(e)}try{["/contact","/courses","/playgrounds","/learning-paths","/pricing","/checkout","/codeday","/hacktoberfest","/student","/payment-check"].find(e=>window.location.pathname.startsWith(e))?e.$crisp.push(["do","chat:show"]):e.$crisp.push(["do","chat:hide"])}catch(e){console.error(e)}try{x.isLoading||(x.selfProMembershipDetails?e.$crisp.push(["set","session:segments",[["pro"],!0]]):e.$crisp.push(["set","session:segments",[[],!0]]))}catch(e){console.error(e)}}},[E,x]),z({},{enabled:"authorized"===E.state}),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)("div",{id:"root","data-user-auth-state":E.state,className:(0,w.default)("relative bg-white text-black dark:bg-gray-900 dark:text-white z-0",d),children:[(0,i.jsx)(_,{siteBannerData:L,onClose:()=>{}}),o,(0,i.jsxs)("div",{children:[null==s?null:(0,i.jsx)("div",{className:"md:hidden block",children:s}),(0,i.jsxs)("main",{className:"flex w-full flex-row",children:[null==t?null:(0,i.jsx)("div",{className:(0,w.default)("flex-shink-0",null==s?"":"md:block hidden"),children:t}),(0,i.jsx)("section",{className:"flex-grow min-w-0",children:n})]})]}),c]}),(0,i.jsx)(u.uJ,{logo:"https://codedamn.com/assets/images/blacklogo.jpg",url:"https://codedamn.com"}),(0,i.jsx)(u.ns,{name:"Codedamn",url:"https://codedamn.com",legalName:"CODEDAMN PRIVATE LIMITED",logo:"https://codedamn.com/assets/images/blacklogo.jpg",type:"EducationalOrganization"}),(0,i.jsx)(u.iu,{url:"https://codedamn.com",potentialActions:[{target:"https://codedamn.com/search?query",queryInput:"search_term"}]}),(0,i.jsx)(M.x7,{}),(0,i.jsx)(m.default,{}),(0,i.jsxs)(v(),{children:[(0,i.jsx)("meta",{name:"viewport",content:"mobile-app"!==(0,N.E1)().websiteType||A.startsWith("/learning-path/")?"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no":"width=device-width, initial-scale=1.0, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no"}),"mobile-app"===(0,N.E1)().websiteType?(0,i.jsx)("script",{dangerouslySetInnerHTML:{__html:'try {\n    if(window.Capacitor) throw new Error(\'Capacitor already available\')\n\n    window.Capacitor = { DEBUG: false, isLoggingEnabled: false, Plugins: {} };\n\n    window.WEBVIEW_SERVER_URL = \'https://app.codedamn.com\';\n\n\n    /*! Capacitor: https://capacitorjs.com/ - MIT License */\n    /* Generated File. Do not edit. */\n\n    const nativeBridge = (function (exports) {\n        \'use strict\';\n\n        var ExceptionCode;\n        (function (ExceptionCode) {\n            /**\n             * API is not implemented.\n             *\n             * This usually means the API can\'t be used because it is not implemented for\n             * the current platform.\n             */\n            ExceptionCode["Unimplemented"] = "UNIMPLEMENTED";\n            /**\n             * API is not available.\n             *\n             * This means the API can\'t be used right now because:\n             *   - it is currently missing a prerequisite, such as network connectivity\n             *   - it requires a particular platform or browser version\n             */\n            ExceptionCode["Unavailable"] = "UNAVAILABLE";\n        })(ExceptionCode || (ExceptionCode = {}));\n        class CapacitorException extends Error {\n            constructor(message, code, data) {\n                super(message);\n                this.message = message;\n                this.code = code;\n                this.data = data;\n            }\n        }\n\n        // For removing exports for iOS/Android, keep let for reassignment\n        // eslint-disable-next-line\n        let dummy = {};\n        const initBridge = (w) => {\n            const getPlatformId = (win) => {\n                var _a, _b;\n                if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n                    return \'android\';\n                }\n                else if ((_b = (_a = win === null || win === void 0 ? void 0 : win.webkit) === null || _a === void 0 ? void 0 : _a.messageHandlers) === null || _b === void 0 ? void 0 : _b.bridge) {\n                    return \'ios\';\n                }\n                else {\n                    return \'web\';\n                }\n            };\n            const convertFileSrcServerUrl = (webviewServerUrl, filePath) => {\n                if (typeof filePath === \'string\') {\n                    if (filePath.startsWith(\'/\')) {\n                        return webviewServerUrl + \'/_capacitor_file_\' + filePath;\n                    }\n                    else if (filePath.startsWith(\'file://\')) {\n                        return (webviewServerUrl + filePath.replace(\'file://\', \'/_capacitor_file_\'));\n                    }\n                    else if (filePath.startsWith(\'content://\')) {\n                        return (webviewServerUrl +\n                            filePath.replace(\'content:/\', \'/_capacitor_content_\'));\n                    }\n                }\n                return filePath;\n            };\n            const initEvents = (win, cap) => {\n                cap.addListener = (pluginName, eventName, callback) => {\n                    const callbackId = cap.nativeCallback(pluginName, \'addListener\', {\n                        eventName: eventName,\n                    }, callback);\n                    return {\n                        remove: async () => {\n                            var _a;\n                            (_a = win === null || win === void 0 ? void 0 : win.console) === null || _a === void 0 ? void 0 : _a.debug(\'Removing listener\', pluginName, eventName);\n                            cap.removeListener(pluginName, callbackId, eventName, callback);\n                        },\n                    };\n                };\n                cap.removeListener = (pluginName, callbackId, eventName, callback) => {\n                    cap.nativeCallback(pluginName, \'removeListener\', {\n                        callbackId: callbackId,\n                        eventName: eventName,\n                    }, callback);\n                };\n                cap.createEvent = (eventName, eventData) => {\n                    const doc = win.document;\n                    if (doc) {\n                        const ev = doc.createEvent(\'Events\');\n                        ev.initEvent(eventName, false, false);\n                        if (eventData && typeof eventData === \'object\') {\n                            for (const i in eventData) {\n                                // eslint-disable-next-line no-prototype-builtins\n                                if (eventData.hasOwnProperty(i)) {\n                                    ev[i] = eventData[i];\n                                }\n                            }\n                        }\n                        return ev;\n                    }\n                    return null;\n                };\n                cap.triggerEvent = (eventName, target, eventData) => {\n                    const doc = win.document;\n                    const cordova = win.cordova;\n                    eventData = eventData || {};\n                    const ev = cap.createEvent(eventName, eventData);\n                    if (ev) {\n                        if (target === \'document\') {\n                            if (cordova === null || cordova === void 0 ? void 0 : cordova.fireDocumentEvent) {\n                                cordova.fireDocumentEvent(eventName, eventData);\n                                return true;\n                            }\n                            else if (doc === null || doc === void 0 ? void 0 : doc.dispatchEvent) {\n                                return doc.dispatchEvent(ev);\n                            }\n                        }\n                        else if (target === \'window\' && win.dispatchEvent) {\n                            return win.dispatchEvent(ev);\n                        }\n                        else if (doc === null || doc === void 0 ? void 0 : doc.querySelector) {\n                            const targetEl = doc.querySelector(target);\n                            if (targetEl) {\n                                return targetEl.dispatchEvent(ev);\n                            }\n                        }\n                    }\n                    return false;\n                };\n                win.Capacitor = cap;\n            };\n            const initLegacyHandlers = (win, cap) => {\n                // define cordova if it\'s not there already\n                win.cordova = win.cordova || {};\n                const doc = win.document;\n                const nav = win.navigator;\n                if (nav) {\n                    nav.app = nav.app || {};\n                    nav.app.exitApp = () => {\n                        if (!cap.Plugins || !cap.Plugins.App) {\n                            win.console.warn(\'App plugin not installed\');\n                        }\n                        else {\n                            cap.nativeCallback(\'App\', \'exitApp\', {});\n                        }\n                    };\n                }\n                if (doc) {\n                    const docAddEventListener = doc.addEventListener;\n                    doc.addEventListener = (...args) => {\n                        const eventName = args[0];\n                        const handler = args[1];\n                        if (eventName === \'deviceready\' && handler) {\n                            Promise.resolve().then(handler);\n                        }\n                        else if (eventName === \'backbutton\' && cap.Plugins.App) {\n                            // Add a dummy listener so Capacitor doesn\'t do the default\n                            // back button action\n                            if (!cap.Plugins || !cap.Plugins.App) {\n                                win.console.warn(\'App plugin not installed\');\n                            }\n                            else {\n                                cap.Plugins.App.addListener(\'backButton\', () => {\n                                    // ignore\n                                });\n                            }\n                        }\n                        return docAddEventListener.apply(doc, args);\n                    };\n                }\n                // deprecated in v3, remove from v4\n                cap.platform = cap.getPlatform();\n                cap.isNative = cap.isNativePlatform();\n                win.Capacitor = cap;\n            };\n            const initVendor = (win, cap) => {\n                const Ionic = (win.Ionic = win.Ionic || {});\n                const IonicWebView = (Ionic.WebView = Ionic.WebView || {});\n                const Plugins = cap.Plugins;\n                IonicWebView.getServerBasePath = (callback) => {\n                    var _a;\n                    (_a = Plugins === null || Plugins === void 0 ? void 0 : Plugins.WebView) === null || _a === void 0 ? void 0 : _a.getServerBasePath().then((result) => {\n                        callback(result.path);\n                    });\n                };\n                IonicWebView.setServerBasePath = (path) => {\n                    var _a;\n                    (_a = Plugins === null || Plugins === void 0 ? void 0 : Plugins.WebView) === null || _a === void 0 ? void 0 : _a.setServerBasePath({ path });\n                };\n                IonicWebView.persistServerBasePath = () => {\n                    var _a;\n                    (_a = Plugins === null || Plugins === void 0 ? void 0 : Plugins.WebView) === null || _a === void 0 ? void 0 : _a.persistServerBasePath();\n                };\n                IonicWebView.convertFileSrc = (url) => cap.convertFileSrc(url);\n                win.Capacitor = cap;\n                win.Ionic.WebView = IonicWebView;\n            };\n            const initLogger = (win, cap) => {\n                const BRIDGED_CONSOLE_METHODS = [\n                    \'debug\',\n                    \'error\',\n                    \'info\',\n                    \'log\',\n                    \'trace\',\n                    \'warn\',\n                ];\n                const createLogFromNative = (c) => (result) => {\n                    if (isFullConsole(c)) {\n                        const success = result.success === true;\n                        const tagStyles = success\n                            ? \'font-style: italic; font-weight: lighter; color: gray\'\n                            : \'font-style: italic; font-weight: lighter; color: red\';\n                        c.groupCollapsed(\'%cresult %c\' +\n                            result.pluginId +\n                            \'.\' +\n                            result.methodName +\n                            \' (#\' +\n                            result.callbackId +\n                            \')\', tagStyles, \'font-style: italic; font-weight: bold; color: #444\');\n                        if (result.success === false) {\n                            c.error(result.error);\n                        }\n                        else {\n                            c.dir(result.data);\n                        }\n                        c.groupEnd();\n                    }\n                    else {\n                        if (result.success === false) {\n                            c.error(\'LOG FROM NATIVE\', result.error);\n                        }\n                        else {\n                            c.log(\'LOG FROM NATIVE\', result.data);\n                        }\n                    }\n                };\n                const createLogToNative = (c) => (call) => {\n                    if (isFullConsole(c)) {\n                        c.groupCollapsed(\'%cnative %c\' +\n                            call.pluginId +\n                            \'.\' +\n                            call.methodName +\n                            \' (#\' +\n                            call.callbackId +\n                            \')\', \'font-weight: lighter; color: gray\', \'font-weight: bold; color: #000\');\n                        c.dir(call);\n                        c.groupEnd();\n                    }\n                    else {\n                        c.log(\'LOG TO NATIVE: \', call);\n                    }\n                };\n                const isFullConsole = (c) => {\n                    if (!c) {\n                        return false;\n                    }\n                    return (typeof c.groupCollapsed === \'function\' ||\n                        typeof c.groupEnd === \'function\' ||\n                        typeof c.dir === \'function\');\n                };\n                const serializeConsoleMessage = (msg) => {\n                    if (typeof msg === \'object\') {\n                        try {\n                            msg = JSON.stringify(msg);\n                        }\n                        catch (e) {\n                            // ignore\n                        }\n                    }\n                    return String(msg);\n                };\n                const platform = getPlatformId(win);\n                if (platform == \'android\' || platform == \'ios\') {\n                    // patch document.cookie on Android/iOS\n                    win.CapacitorCookiesDescriptor =\n                        Object.getOwnPropertyDescriptor(Document.prototype, \'cookie\') ||\n                            Object.getOwnPropertyDescriptor(HTMLDocument.prototype, \'cookie\');\n                    let doPatchCookies = false;\n                    // check if capacitor cookies is disabled before patching\n                    if (platform === \'ios\') {\n                        // Use prompt to synchronously get capacitor cookies config.\n                        // https://stackoverflow.com/questions/29249132/wkwebview-complex-communication-between-javascript-native-code/49474323#49474323\n                        const payload = {\n                            type: \'CapacitorCookies.isEnabled\',\n                        };\n                        const isCookiesEnabled = prompt(JSON.stringify(payload));\n                        if (isCookiesEnabled === \'true\') {\n                            doPatchCookies = true;\n                        }\n                    }\n                    else if (typeof win.CapacitorCookiesAndroidInterface !== \'undefined\') {\n                        const isCookiesEnabled = win.CapacitorCookiesAndroidInterface.isEnabled();\n                        if (isCookiesEnabled === true) {\n                            doPatchCookies = true;\n                        }\n                    }\n                    if (doPatchCookies) {\n                        Object.defineProperty(document, \'cookie\', {\n                            get: function () {\n                                if (platform === \'ios\') {\n                                    // Use prompt to synchronously get cookies.\n                                    // https://stackoverflow.com/questions/29249132/wkwebview-complex-communication-between-javascript-native-code/49474323#49474323\n                                    const payload = {\n                                        type: \'CapacitorCookies.get\',\n                                    };\n                                    const res = prompt(JSON.stringify(payload));\n                                    return res;\n                                }\n                                else if (typeof win.CapacitorCookiesAndroidInterface !== \'undefined\') {\n                                    return win.CapacitorCookiesAndroidInterface.getCookies();\n                                }\n                            },\n                            set: function (val) {\n                                const cookiePairs = val.split(\';\');\n                                const domainSection = val.toLowerCase().split(\'domain=\')[1];\n                                const domain = cookiePairs.length > 1 &&\n                                    domainSection != null &&\n                                    domainSection.length > 0\n                                    ? domainSection.split(\';\')[0].trim()\n                                    : \'\';\n                                if (platform === \'ios\') {\n                                    // Use prompt to synchronously set cookies.\n                                    // https://stackoverflow.com/questions/29249132/wkwebview-complex-communication-between-javascript-native-code/49474323#49474323\n                                    const payload = {\n                                        type: \'CapacitorCookies.set\',\n                                        action: val,\n                                        domain,\n                                    };\n                                    prompt(JSON.stringify(payload));\n                                }\n                                else if (typeof win.CapacitorCookiesAndroidInterface !== \'undefined\') {\n                                    win.CapacitorCookiesAndroidInterface.setCookie(domain, val);\n                                }\n                            },\n                        });\n                    }\n                    // patch fetch / XHR on Android/iOS\n                    // store original fetch & XHR functions\n                    win.CapacitorWebFetch = window.fetch;\n                    win.CapacitorWebXMLHttpRequest = {\n                        abort: window.XMLHttpRequest.prototype.abort,\n                        getAllResponseHeaders: window.XMLHttpRequest.prototype.getAllResponseHeaders,\n                        getResponseHeader: window.XMLHttpRequest.prototype.getResponseHeader,\n                        open: window.XMLHttpRequest.prototype.open,\n                        send: window.XMLHttpRequest.prototype.send,\n                        setRequestHeader: window.XMLHttpRequest.prototype.setRequestHeader,\n                    };\n                    let doPatchHttp = false;\n                    // check if capacitor http is disabled before patching\n                    if (platform === \'ios\') {\n                        // Use prompt to synchronously get capacitor http config.\n                        // https://stackoverflow.com/questions/29249132/wkwebview-complex-communication-between-javascript-native-code/49474323#49474323\n                        const payload = {\n                            type: \'CapacitorHttp\',\n                        };\n                        const isHttpEnabled = prompt(JSON.stringify(payload));\n                        if (isHttpEnabled === \'true\') {\n                            doPatchHttp = true;\n                        }\n                    }\n                    else if (typeof win.CapacitorHttpAndroidInterface !== \'undefined\') {\n                        const isHttpEnabled = win.CapacitorHttpAndroidInterface.isEnabled();\n                        if (isHttpEnabled === true) {\n                            doPatchHttp = true;\n                        }\n                    }\n                    if (doPatchHttp) {\n                        // fetch patch\n                        window.fetch = async (resource, options) => {\n                            if (!(resource.toString().startsWith(\'http:\') ||\n                                resource.toString().startsWith(\'https:\'))) {\n                                return win.CapacitorWebFetch(resource, options);\n                            }\n                            try {\n                                // intercept request & pass to the bridge\n                                const nativeResponse = await cap.nativePromise(\'CapacitorHttp\', \'request\', {\n                                    url: resource,\n                                    method: (options === null || options === void 0 ? void 0 : options.method) ? options.method : undefined,\n                                    data: (options === null || options === void 0 ? void 0 : options.body) ? options.body : undefined,\n                                    headers: (options === null || options === void 0 ? void 0 : options.headers) ? options.headers : undefined,\n                                });\n                                const data = typeof nativeResponse.data === \'string\'\n                                    ? nativeResponse.data\n                                    : JSON.stringify(nativeResponse.data);\n                                // intercept & parse response before returning\n                                const response = new Response(data, {\n                                    headers: nativeResponse.headers,\n                                    status: nativeResponse.status,\n                                });\n                                return response;\n                            }\n                            catch (error) {\n                                return Promise.reject(error);\n                            }\n                        };\n                        // XHR event listeners\n                        const addEventListeners = function () {\n                            this.addEventListener(\'abort\', function () {\n                                if (typeof this.onabort === \'function\')\n                                    this.onabort();\n                            });\n                            this.addEventListener(\'error\', function () {\n                                if (typeof this.onerror === \'function\')\n                                    this.onerror();\n                            });\n                            this.addEventListener(\'load\', function () {\n                                if (typeof this.onload === \'function\')\n                                    this.onload();\n                            });\n                            this.addEventListener(\'loadend\', function () {\n                                if (typeof this.onloadend === \'function\')\n                                    this.onloadend();\n                            });\n                            this.addEventListener(\'loadstart\', function () {\n                                if (typeof this.onloadstart === \'function\')\n                                    this.onloadstart();\n                            });\n                            this.addEventListener(\'readystatechange\', function () {\n                                if (typeof this.onreadystatechange === \'function\')\n                                    this.onreadystatechange();\n                            });\n                            this.addEventListener(\'timeout\', function () {\n                                if (typeof this.ontimeout === \'function\')\n                                    this.ontimeout();\n                            });\n                        };\n                        // XHR patch abort\n                        window.XMLHttpRequest.prototype.abort = function () {\n                            if (this._url == null ||\n                                !(this._url.startsWith(\'http:\') || this._url.startsWith(\'https:\'))) {\n                                return win.CapacitorWebXMLHttpRequest.abort.call(this);\n                            }\n                            this.readyState = 0;\n                            this.dispatchEvent(new Event(\'abort\'));\n                            this.dispatchEvent(new Event(\'loadend\'));\n                        };\n                        // XHR patch open\n                        window.XMLHttpRequest.prototype.open = function (method, url) {\n                            this._url = url;\n                            if (!(url.startsWith(\'http:\') || url.toString().startsWith(\'https:\'))) {\n                                return win.CapacitorWebXMLHttpRequest.open.call(this, method, url);\n                            }\n                            Object.defineProperties(this, {\n                                _headers: {\n                                    value: {},\n                                    writable: true,\n                                },\n                                _method: {\n                                    value: method,\n                                    writable: true,\n                                },\n                                readyState: {\n                                    get: function () {\n                                        var _a;\n                                        return (_a = this._readyState) !== null && _a !== void 0 ? _a : 0;\n                                    },\n                                    set: function (val) {\n                                        this._readyState = val;\n                                        this.dispatchEvent(new Event(\'readystatechange\'));\n                                    },\n                                },\n                                response: {\n                                    value: \'\',\n                                    writable: true,\n                                },\n                                responseText: {\n                                    value: \'\',\n                                    writable: true,\n                                },\n                                responseURL: {\n                                    value: \'\',\n                                    writable: true,\n                                },\n                                status: {\n                                    value: 0,\n                                    writable: true,\n                                },\n                            });\n                            addEventListeners.call(this);\n                            this.readyState = 1;\n                        };\n                        // XHR patch set request header\n                        window.XMLHttpRequest.prototype.setRequestHeader = function (header, value) {\n                            if (this._url == null ||\n                                !(this._url.startsWith(\'http:\') || this._url.startsWith(\'https:\'))) {\n                                return win.CapacitorWebXMLHttpRequest.setRequestHeader.call(this, header, value);\n                            }\n                            this._headers[header] = value;\n                        };\n                        // XHR patch send\n                        window.XMLHttpRequest.prototype.send = function (body) {\n                            if (this._url == null ||\n                                !(this._url.startsWith(\'http:\') || this._url.startsWith(\'https:\'))) {\n                                return win.CapacitorWebXMLHttpRequest.send.call(this, body);\n                            }\n                            try {\n                                this.readyState = 2;\n                                // intercept request & pass to the bridge\n                                cap\n                                    .nativePromise(\'CapacitorHttp\', \'request\', {\n                                    url: this._url,\n                                    method: this._method,\n                                    data: body !== null ? body : undefined,\n                                    headers: this._headers,\n                                })\n                                    .then((nativeResponse) => {\n                                    // intercept & parse response before returning\n                                    if (this.readyState == 2) {\n                                        this.dispatchEvent(new Event(\'loadstart\'));\n                                        this._headers = nativeResponse.headers;\n                                        this.status = nativeResponse.status;\n                                        this.response = nativeResponse.data;\n                                        this.responseText =\n                                            typeof nativeResponse.data === \'string\'\n                                                ? nativeResponse.data\n                                                : JSON.stringify(nativeResponse.data);\n                                        this.responseURL = nativeResponse.url;\n                                        this.readyState = 4;\n                                        this.dispatchEvent(new Event(\'load\'));\n                                        this.dispatchEvent(new Event(\'loadend\'));\n                                    }\n                                })\n                                    .catch((error) => {\n                                    this.dispatchEvent(new Event(\'loadstart\'));\n                                    this.status = error.status;\n                                    this._headers = error.headers;\n                                    this.response = error.data;\n                                    this.responseText = JSON.stringify(error.data);\n                                    this.responseURL = error.url;\n                                    this.readyState = 4;\n                                    this.dispatchEvent(new Event(\'error\'));\n                                    this.dispatchEvent(new Event(\'loadend\'));\n                                });\n                            }\n                            catch (error) {\n                                this.dispatchEvent(new Event(\'loadstart\'));\n                                this.status = 500;\n                                this._headers = {};\n                                this.response = error;\n                                this.responseText = error.toString();\n                                this.responseURL = this._url;\n                                this.readyState = 4;\n                                this.dispatchEvent(new Event(\'error\'));\n                                this.dispatchEvent(new Event(\'loadend\'));\n                            }\n                        };\n                        // XHR patch getAllResponseHeaders\n                        window.XMLHttpRequest.prototype.getAllResponseHeaders = function () {\n                            if (this._url == null ||\n                                !(this._url.startsWith(\'http:\') || this._url.startsWith(\'https:\'))) {\n                                return win.CapacitorWebXMLHttpRequest.getAllResponseHeaders.call(this);\n                            }\n                            let returnString = \'\';\n                            for (const key in this._headers) {\n                                if (key != \'Set-Cookie\') {\n                                    returnString += key + \': \' + this._headers[key] + \'\\r\\n\';\n                                }\n                            }\n                            return returnString;\n                        };\n                        // XHR patch getResponseHeader\n                        window.XMLHttpRequest.prototype.getResponseHeader = function (name) {\n                            if (this._url == null ||\n                                !(this._url.startsWith(\'http:\') || this._url.startsWith(\'https:\'))) {\n                                return win.CapacitorWebXMLHttpRequest.getResponseHeader.call(this, name);\n                            }\n                            return this._headers[name];\n                        };\n                    }\n                }\n                // patch window.console on iOS and store original console fns\n                const isIos = getPlatformId(win) === \'ios\';\n                if (win.console && isIos) {\n                    Object.defineProperties(win.console, BRIDGED_CONSOLE_METHODS.reduce((props, method) => {\n                        const consoleMethod = win.console[method].bind(win.console);\n                        props[method] = {\n                            value: (...args) => {\n                                const msgs = [...args];\n                                cap.toNative(\'Console\', \'log\', {\n                                    level: method,\n                                    message: msgs.map(serializeConsoleMessage).join(\' \'),\n                                });\n                                return consoleMethod(...args);\n                            },\n                        };\n                        return props;\n                    }, {}));\n                }\n                cap.logJs = (msg, level) => {\n                    switch (level) {\n                        case \'error\':\n                            win.console.error(msg);\n                            break;\n                        case \'warn\':\n                            win.console.warn(msg);\n                            break;\n                        case \'info\':\n                            win.console.info(msg);\n                            break;\n                        default:\n                            win.console.log(msg);\n                    }\n                };\n                cap.logToNative = createLogToNative(win.console);\n                cap.logFromNative = createLogFromNative(win.console);\n                cap.handleError = err => win.console.error(err);\n                win.Capacitor = cap;\n            };\n            function initNativeBridge(win) {\n                const cap = win.Capacitor || {};\n                // keep a collection of callbacks for native response data\n                const callbacks = new Map();\n                const webviewServerUrl = typeof win.WEBVIEW_SERVER_URL === \'string\' ? win.WEBVIEW_SERVER_URL : \'\';\n                cap.getServerUrl = () => webviewServerUrl;\n                cap.convertFileSrc = filePath => convertFileSrcServerUrl(webviewServerUrl, filePath);\n                // Counter of callback ids, randomized to avoid\n                // any issues during reloads if a call comes back with\n                // an existing callback id from an old session\n                let callbackIdCount = Math.floor(Math.random() * 134217728);\n                let postToNative = null;\n                const isNativePlatform = () => true;\n                const getPlatform = () => getPlatformId(win);\n                cap.getPlatform = getPlatform;\n                cap.isPluginAvailable = name => Object.prototype.hasOwnProperty.call(cap.Plugins, name);\n                cap.isNativePlatform = isNativePlatform;\n                // create the postToNative() fn if needed\n                if (getPlatformId(win) === \'android\') {\n                    // android platform\n                    postToNative = data => {\n                        var _a;\n                        try {\n                            win.androidBridge.postMessage(JSON.stringify(data));\n                        }\n                        catch (e) {\n                            (_a = win === null || win === void 0 ? void 0 : win.console) === null || _a === void 0 ? void 0 : _a.error(e);\n                        }\n                    };\n                }\n                else if (getPlatformId(win) === \'ios\') {\n                    // ios platform\n                    postToNative = data => {\n                        var _a;\n                        try {\n                            data.type = data.type ? data.type : \'message\';\n                            win.webkit.messageHandlers.bridge.postMessage(data);\n                        }\n                        catch (e) {\n                            (_a = win === null || win === void 0 ? void 0 : win.console) === null || _a === void 0 ? void 0 : _a.error(e);\n                        }\n                    };\n                }\n                cap.handleWindowError = (msg, url, lineNo, columnNo, err) => {\n                    const str = msg.toLowerCase();\n                    if (str.indexOf(\'script error\') > -1) ;\n                    else {\n                        const errObj = {\n                            type: \'js.error\',\n                            error: {\n                                message: msg,\n                                url: url,\n                                line: lineNo,\n                                col: columnNo,\n                                errorObject: JSON.stringify(err),\n                            },\n                        };\n                        if (err !== null) {\n                            cap.handleError(err);\n                        }\n                        postToNative(errObj);\n                    }\n                    return false;\n                };\n                if (cap.DEBUG) {\n                    window.onerror = cap.handleWindowError;\n                }\n                initLogger(win, cap);\n                /**\n                 * Send a plugin method call to the native layer\n                 */\n                cap.toNative = (pluginName, methodName, options, storedCallback) => {\n                    var _a, _b;\n                    try {\n                        if (typeof postToNative === \'function\') {\n                            let callbackId = \'-1\';\n                            if (storedCallback &&\n                                (typeof storedCallback.callback === \'function\' ||\n                                    typeof storedCallback.resolve === \'function\')) {\n                                // store the call for later lookup\n                                callbackId = String(++callbackIdCount);\n                                callbacks.set(callbackId, storedCallback);\n                            }\n                            const callData = {\n                                callbackId: callbackId,\n                                pluginId: pluginName,\n                                methodName: methodName,\n                                options: options || {},\n                            };\n                            if (cap.isLoggingEnabled && pluginName !== \'Console\') {\n                                cap.logToNative(callData);\n                            }\n                            // post the call data to native\n                            postToNative(callData);\n                            return callbackId;\n                        }\n                        else {\n                            (_a = win === null || win === void 0 ? void 0 : win.console) === null || _a === void 0 ? void 0 : _a.warn(`implementation unavailable for: ${pluginName}`);\n                        }\n                    }\n                    catch (e) {\n                        (_b = win === null || win === void 0 ? void 0 : win.console) === null || _b === void 0 ? void 0 : _b.error(e);\n                    }\n                    return null;\n                };\n                if (win === null || win === void 0 ? void 0 : win.androidBridge) {\n                    win.androidBridge.onmessage = function (event) {\n                        returnResult(JSON.parse(event.data));\n                    };\n                }\n                /**\n                 * Process a response from the native layer.\n                 */\n                cap.fromNative = result => {\n                    returnResult(result);\n                };\n                const returnResult = (result) => {\n                    var _a, _b;\n                    if (cap.isLoggingEnabled && result.pluginId !== \'Console\') {\n                        cap.logFromNative(result);\n                    }\n                    // get the stored call, if it exists\n                    try {\n                        const storedCall = callbacks.get(result.callbackId);\n                        if (storedCall) {\n                            // looks like we\'ve got a stored call\n                            if (result.error) {\n                                // ensure stacktraces by copying error properties to an Error\n                                result.error = Object.keys(result.error).reduce((err, key) => {\n                                    // use any type to avoid importing util and compiling most of .ts files\n                                    err[key] = result.error[key];\n                                    return err;\n                                }, new cap.Exception(\'\'));\n                            }\n                            if (typeof storedCall.callback === \'function\') {\n                                // callback\n                                if (result.success) {\n                                    storedCall.callback(result.data);\n                                }\n                                else {\n                                    storedCall.callback(null, result.error);\n                                }\n                            }\n                            else if (typeof storedCall.resolve === \'function\') {\n                                // promise\n                                if (result.success) {\n                                    storedCall.resolve(result.data);\n                                }\n                                else {\n                                    storedCall.reject(result.error);\n                                }\n                                // no need to keep this stored callback\n                                // around for a one time resolve promise\n                                callbacks.delete(result.callbackId);\n                            }\n                        }\n                        else if (!result.success && result.error) {\n                            // no stored callback, but if there was an error let\'s log it\n                            (_a = win === null || win === void 0 ? void 0 : win.console) === null || _a === void 0 ? void 0 : _a.warn(result.error);\n                        }\n                        if (result.save === false) {\n                            callbacks.delete(result.callbackId);\n                        }\n                    }\n                    catch (e) {\n                        (_b = win === null || win === void 0 ? void 0 : win.console) === null || _b === void 0 ? void 0 : _b.error(e);\n                    }\n                    // always delete to prevent memory leaks\n                    // overkill but we\'re not sure what apps will do with this data\n                    delete result.data;\n                    delete result.error;\n                };\n                cap.nativeCallback = (pluginName, methodName, options, callback) => {\n                    if (typeof options === \'function\') {\n                        console.warn(`Using a callback as the \'options\' parameter of \'nativeCallback()\' is deprecated.`);\n                        callback = options;\n                        options = null;\n                    }\n                    return cap.toNative(pluginName, methodName, options, { callback });\n                };\n                cap.nativePromise = (pluginName, methodName, options) => {\n                    return new Promise((resolve, reject) => {\n                        cap.toNative(pluginName, methodName, options, {\n                            resolve: resolve,\n                            reject: reject,\n                        });\n                    });\n                };\n                cap.withPlugin = (_pluginId, _fn) => dummy;\n                cap.Exception = CapacitorException;\n                initEvents(win, cap);\n                initLegacyHandlers(win, cap);\n                initVendor(win, cap);\n                win.Capacitor = cap;\n            }\n            initNativeBridge(w);\n        };\n        initBridge(typeof globalThis !== \'undefined\'\n            ? globalThis\n            : typeof self !== \'undefined\'\n                ? self\n                : typeof window !== \'undefined\'\n                    ? window\n                    : typeof global !== \'undefined\'\n                        ? global\n                        : {});\n\n        dummy = initBridge;\n\n        Object.defineProperty(exports, \'__esModule\', { value: true });\n\n        return exports;\n\n    })({});\n\n\n    // Begin: Capacitor Plugin JS\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'App\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'App\', eventName, callback);\n    }\n    t[\'getState\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'App\', \'getState\', _options)\n    }\n    t[\'getInfo\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'App\', \'getInfo\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'App\', \'removeAllListeners\', _options)\n    }\n    t[\'getLaunchUrl\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'App\', \'getLaunchUrl\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'App\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'App\', \'requestPermissions\', _options)\n    }\n    t[\'exitApp\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'App\', \'exitApp\', _options)\n    }\n    t[\'minimizeApp\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'App\', \'minimizeApp\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'KeepAwake\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'KeepAwake\', eventName, callback);\n    }\n    t[\'keepAwake\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'KeepAwake\', \'keepAwake\', _options)\n    }\n    t[\'allowSleep\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'KeepAwake\', \'allowSleep\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'KeepAwake\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'KeepAwake\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'KeepAwake\', \'requestPermissions\', _options)\n    }\n    t[\'isSupported\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'KeepAwake\', \'isSupported\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'ScreenReader\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'ScreenReader\', eventName, callback);\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'ScreenReader\', \'removeAllListeners\', _options)\n    }\n    t[\'isEnabled\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'ScreenReader\', \'isEnabled\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'ScreenReader\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'ScreenReader\', \'requestPermissions\', _options)\n    }\n    t[\'speak\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'ScreenReader\', \'speak\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'OAuth2Client\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'OAuth2Client\', eventName, callback);\n    }\n    t[\'logout\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'OAuth2Client\', \'logout\', _options)\n    }\n    t[\'authenticate\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'OAuth2Client\', \'authenticate\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'OAuth2Client\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'OAuth2Client\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'OAuth2Client\', \'requestPermissions\', _options)\n    }\n    t[\'refreshToken\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'OAuth2Client\', \'refreshToken\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'TextZoom\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'TextZoom\', eventName, callback);\n    }\n    t[\'set\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'TextZoom\', \'set\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'TextZoom\', \'removeAllListeners\', _options)\n    }\n    t[\'get\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'TextZoom\', \'get\', _options)\n    }\n    t[\'getPreferred\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'TextZoom\', \'getPreferred\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'TextZoom\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'TextZoom\', \'requestPermissions\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'NavigationBar\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'NavigationBar\', eventName, callback);\n    }\n    t[\'setTransparency\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'NavigationBar\', \'setTransparency\', _options)\n    }\n    t[\'hide\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'NavigationBar\', \'hide\', _options)\n    }\n    t[\'setColor\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'NavigationBar\', \'setColor\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'NavigationBar\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'NavigationBar\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'NavigationBar\', \'requestPermissions\', _options)\n    }\n    t[\'show\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'NavigationBar\', \'show\', _options)\n    }\n    t[\'getColor\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'NavigationBar\', \'getColor\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'LocalNotifications\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'LocalNotifications\', eventName, callback);\n    }\n    t[\'cancel\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'cancel\', _options)\n    }\n    t[\'areEnabled\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'areEnabled\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'requestPermissions\', _options)\n    }\n    t[\'removeAllDeliveredNotifications\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'removeAllDeliveredNotifications\', _options)\n    }\n    t[\'deleteChannel\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'deleteChannel\', _options)\n    }\n    t[\'registerActionTypes\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'registerActionTypes\', _options)\n    }\n    t[\'schedule\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'schedule\', _options)\n    }\n    t[\'listChannels\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'listChannels\', _options)\n    }\n    t[\'removeDeliveredNotifications\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'removeDeliveredNotifications\', _options)\n    }\n    t[\'createChannel\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'createChannel\', _options)\n    }\n    t[\'getDeliveredNotifications\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'getDeliveredNotifications\', _options)\n    }\n    t[\'getPending\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'LocalNotifications\', \'getPending\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'Toast\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'Toast\', eventName, callback);\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Toast\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Toast\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Toast\', \'requestPermissions\', _options)\n    }\n    t[\'show\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Toast\', \'show\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'Network\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'Network\', eventName, callback);\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Network\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Network\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Network\', \'requestPermissions\', _options)\n    }\n    t[\'getStatus\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Network\', \'getStatus\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'SplashScreen\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'SplashScreen\', eventName, callback);\n    }\n    t[\'hide\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'SplashScreen\', \'hide\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'SplashScreen\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'SplashScreen\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'SplashScreen\', \'requestPermissions\', _options)\n    }\n    t[\'show\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'SplashScreen\', \'show\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'WebView\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'WebView\', eventName, callback);\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'WebView\', \'removeAllListeners\', _options)\n    }\n    t[\'persistServerBasePath\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'WebView\', \'persistServerBasePath\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'WebView\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'WebView\', \'requestPermissions\', _options)\n    }\n    t[\'setServerBasePath\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'WebView\', \'setServerBasePath\', _options)\n    }\n    t[\'getServerBasePath\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'WebView\', \'getServerBasePath\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'FirebaseCrashlytics\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'FirebaseCrashlytics\', eventName, callback);\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'requestPermissions\', _options)\n    }\n    t[\'crash\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'crash\', _options)\n    }\n    t[\'recordException\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'recordException\', _options)\n    }\n    t[\'deleteUnsentReports\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'deleteUnsentReports\', _options)\n    }\n    t[\'setEnabled\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'setEnabled\', _options)\n    }\n    t[\'addLogMessage\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'addLogMessage\', _options)\n    }\n    t[\'didCrashDuringPreviousExecution\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'didCrashDuringPreviousExecution\', _options)\n    }\n    t[\'isEnabled\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'isEnabled\', _options)\n    }\n    t[\'setContext\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'setContext\', _options)\n    }\n    t[\'sendUnsentReports\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'sendUnsentReports\', _options)\n    }\n    t[\'setUserId\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseCrashlytics\', \'setUserId\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'PrivacyScreen\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'PrivacyScreen\', eventName, callback);\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PrivacyScreen\', \'removeAllListeners\', _options)\n    }\n    t[\'disable\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PrivacyScreen\', \'disable\', _options)\n    }\n    t[\'enable\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PrivacyScreen\', \'enable\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PrivacyScreen\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PrivacyScreen\', \'requestPermissions\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'Device\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'Device\', eventName, callback);\n    }\n    t[\'getLanguageCode\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Device\', \'getLanguageCode\', _options)\n    }\n    t[\'getInfo\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Device\', \'getInfo\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Device\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Device\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Device\', \'requestPermissions\', _options)\n    }\n    t[\'getId\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Device\', \'getId\', _options)\n    }\n    t[\'getLanguageTag\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Device\', \'getLanguageTag\', _options)\n    }\n    t[\'getBatteryInfo\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Device\', \'getBatteryInfo\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'Keyboard\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'Keyboard\', eventName, callback);\n    }\n    t[\'getResizeMode\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Keyboard\', \'getResizeMode\', _options)\n    }\n    t[\'setAccessoryBarVisible\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Keyboard\', \'setAccessoryBarVisible\', _options)\n    }\n    t[\'hide\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Keyboard\', \'hide\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Keyboard\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Keyboard\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Keyboard\', \'requestPermissions\', _options)\n    }\n    t[\'setResizeMode\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Keyboard\', \'setResizeMode\', _options)\n    }\n    t[\'show\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Keyboard\', \'show\', _options)\n    }\n    t[\'setStyle\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Keyboard\', \'setStyle\', _options)\n    }\n    t[\'setScroll\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Keyboard\', \'setScroll\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'FirebaseAnalytics\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'FirebaseAnalytics\', eventName, callback);\n    }\n    t[\'setUserProperty\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'setUserProperty\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'requestPermissions\', _options)\n    }\n    t[\'logEvent\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'logEvent\', _options)\n    }\n    t[\'disable\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'disable\', _options)\n    }\n    t[\'enable\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'enable\', _options)\n    }\n    t[\'setSessionTimeoutDuration\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'setSessionTimeoutDuration\', _options)\n    }\n    t[\'setCollectionEnabled\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'setCollectionEnabled\', _options)\n    }\n    t[\'setScreenName\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'setScreenName\', _options)\n    }\n    t[\'reset\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'reset\', _options)\n    }\n    t[\'getAppInstanceId\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'getAppInstanceId\', _options)\n    }\n    t[\'setUserId\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FirebaseAnalytics\', \'setUserId\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'StatusBar\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'StatusBar\', eventName, callback);\n    }\n    t[\'hide\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'StatusBar\', \'hide\', _options)\n    }\n    t[\'setBackgroundColor\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'StatusBar\', \'setBackgroundColor\', _options)\n    }\n    t[\'setOverlaysWebView\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'StatusBar\', \'setOverlaysWebView\', _options)\n    }\n    t[\'getInfo\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'StatusBar\', \'getInfo\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'StatusBar\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'StatusBar\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'StatusBar\', \'requestPermissions\', _options)\n    }\n    t[\'show\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'StatusBar\', \'show\', _options)\n    }\n    t[\'setStyle\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'StatusBar\', \'setStyle\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'PushNotifications\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'PushNotifications\', eventName, callback);\n    }\n    t[\'listChannels\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PushNotifications\', \'listChannels\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PushNotifications\', \'removeAllListeners\', _options)\n    }\n    t[\'removeDeliveredNotifications\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PushNotifications\', \'removeDeliveredNotifications\', _options)\n    }\n    t[\'createChannel\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PushNotifications\', \'createChannel\', _options)\n    }\n    t[\'getDeliveredNotifications\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PushNotifications\', \'getDeliveredNotifications\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PushNotifications\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PushNotifications\', \'requestPermissions\', _options)\n    }\n    t[\'removeAllDeliveredNotifications\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PushNotifications\', \'removeAllDeliveredNotifications\', _options)\n    }\n    t[\'deleteChannel\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PushNotifications\', \'deleteChannel\', _options)\n    }\n    t[\'register\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'PushNotifications\', \'register\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'SignInWithApple\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'SignInWithApple\', eventName, callback);\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'SignInWithApple\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'SignInWithApple\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'SignInWithApple\', \'requestPermissions\', _options)\n    }\n    t[\'echo\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'SignInWithApple\', \'echo\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'FCM\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'FCM\', eventName, callback);\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FCM\', \'removeAllListeners\', _options)\n    }\n    t[\'getToken\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FCM\', \'getToken\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FCM\', \'checkPermissions\', _options)\n    }\n    t[\'deleteInstance\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FCM\', \'deleteInstance\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FCM\', \'requestPermissions\', _options)\n    }\n    t[\'subscribeTo\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FCM\', \'subscribeTo\', _options)\n    }\n    t[\'unsubscribeFrom\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FCM\', \'unsubscribeFrom\', _options)\n    }\n    t[\'isAutoInitEnabled\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FCM\', \'isAutoInitEnabled\', _options)\n    }\n    t[\'refreshToken\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FCM\', \'refreshToken\', _options)\n    }\n    t[\'setAutoInit\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'FCM\', \'setAutoInit\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'Storage\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'Storage\', eventName, callback);\n    }\n    t[\'set\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'set\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'removeAllListeners\', _options)\n    }\n    t[\'keys\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'keys\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'checkPermissions\', _options)\n    }\n    t[\'clear\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'clear\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'requestPermissions\', _options)\n    }\n    t[\'configure\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'configure\', _options)\n    }\n    t[\'removeOld\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'removeOld\', _options)\n    }\n    t[\'remove\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'remove\', _options)\n    }\n    t[\'get\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'get\', _options)\n    }\n    t[\'migrate\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Storage\', \'migrate\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'Clipboard\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'Clipboard\', eventName, callback);\n    }\n    t[\'read\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Clipboard\', \'read\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Clipboard\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Clipboard\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Clipboard\', \'requestPermissions\', _options)\n    }\n    t[\'write\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Clipboard\', \'write\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'Haptics\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'Haptics\', eventName, callback);\n    }\n    t[\'notification\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Haptics\', \'notification\', _options)\n    }\n    t[\'selectionStart\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Haptics\', \'selectionStart\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Haptics\', \'removeAllListeners\', _options)\n    }\n    t[\'selectionChanged\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Haptics\', \'selectionChanged\', _options)\n    }\n    t[\'impact\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Haptics\', \'impact\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Haptics\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Haptics\', \'requestPermissions\', _options)\n    }\n    t[\'selectionEnd\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Haptics\', \'selectionEnd\', _options)\n    }\n    t[\'vibrate\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Haptics\', \'vibrate\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'CapacitorCookies\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'CapacitorCookies\', eventName, callback);\n    }\n    t[\'deleteCookie\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorCookies\', \'deleteCookie\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorCookies\', \'removeAllListeners\', _options)\n    }\n    t[\'clearCookies\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorCookies\', \'clearCookies\', _options)\n    }\n    t[\'getCookies\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorCookies\', \'getCookies\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorCookies\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorCookies\', \'requestPermissions\', _options)\n    }\n    t[\'clearAllCookies\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorCookies\', \'clearAllCookies\', _options)\n    }\n    t[\'setCookie\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorCookies\', \'setCookie\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'Share\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'Share\', eventName, callback);\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Share\', \'removeAllListeners\', _options)\n    }\n    t[\'canShare\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Share\', \'canShare\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Share\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Share\', \'requestPermissions\', _options)\n    }\n    t[\'share\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Share\', \'share\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'CapacitorHttp\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'CapacitorHttp\', eventName, callback);\n    }\n    t[\'patch\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorHttp\', \'patch\', _options)\n    }\n    t[\'request\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorHttp\', \'request\', _options)\n    }\n    t[\'post\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorHttp\', \'post\', _options)\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorHttp\', \'removeAllListeners\', _options)\n    }\n    t[\'get\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorHttp\', \'get\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorHttp\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorHttp\', \'requestPermissions\', _options)\n    }\n    t[\'delete\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorHttp\', \'delete\', _options)\n    }\n    t[\'put\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'CapacitorHttp\', \'put\', _options)\n    }\n    })(window);\n\n    (function(w) {\n    var a = (w.Capacitor = w.Capacitor || {});\n    var p = (a.Plugins = a.Plugins || {});\n    var t = (p[\'Browser\'] = {});\n    t.addListener = function(eventName, callback) {\n    return w.Capacitor.addListener(\'Browser\', eventName, callback);\n    }\n    t[\'removeAllListeners\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Browser\', \'removeAllListeners\', _options)\n    }\n    t[\'checkPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Browser\', \'checkPermissions\', _options)\n    }\n    t[\'requestPermissions\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Browser\', \'requestPermissions\', _options)\n    }\n    t[\'close\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Browser\', \'close\', _options)\n    }\n    t[\'open\'] = function(_options) {\n    return w.Capacitor.nativePromise(\'Browser\', \'open\', _options)\n    }\n    })(window);\n\n    window.Capacitor.PluginHeaders = [{"name":"App","methods":[{"name":"getState","rtype":"promise"},{"name":"getInfo","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"getLaunchUrl","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"exitApp","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"},{"name":"minimizeApp","rtype":"promise"}]},{"name":"KeepAwake","methods":[{"name":"keepAwake","rtype":"promise"},{"name":"allowSleep","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"isSupported","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"ScreenReader","methods":[{"name":"removeAllListeners","rtype":"promise"},{"name":"isEnabled","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"speak","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"OAuth2Client","methods":[{"name":"logout","rtype":"promise"},{"name":"authenticate","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"},{"name":"refreshToken","rtype":"promise"}]},{"name":"TextZoom","methods":[{"name":"set","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"get","rtype":"promise"},{"name":"getPreferred","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"NavigationBar","methods":[{"name":"setTransparency","rtype":"promise"},{"name":"hide","rtype":"promise"},{"name":"setColor","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"show","rtype":"promise"},{"name":"getColor","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"LocalNotifications","methods":[{"name":"cancel","rtype":"promise"},{"name":"areEnabled","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeAllDeliveredNotifications","rtype":"promise"},{"name":"removeListener"},{"name":"deleteChannel","rtype":"promise"},{"name":"registerActionTypes","rtype":"promise"},{"name":"schedule","rtype":"promise"},{"name":"listChannels","rtype":"promise"},{"name":"removeDeliveredNotifications","rtype":"promise"},{"name":"createChannel","rtype":"promise"},{"name":"getDeliveredNotifications","rtype":"promise"},{"name":"getPending","rtype":"promise"},{"name":"addListener"}]},{"name":"Toast","methods":[{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"show","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"Network","methods":[{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeListener"},{"name":"getStatus","rtype":"promise"},{"name":"addListener"}]},{"name":"SplashScreen","methods":[{"name":"hide","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"show","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"WebView","methods":[{"name":"removeAllListeners","rtype":"promise"},{"name":"persistServerBasePath","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeListener"},{"name":"setServerBasePath","rtype":"promise"},{"name":"addListener"},{"name":"getServerBasePath","rtype":"promise"}]},{"name":"FirebaseCrashlytics","methods":[{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeListener"},{"name":"crash","rtype":"promise"},{"name":"recordException","rtype":"promise"},{"name":"deleteUnsentReports","rtype":"promise"},{"name":"setEnabled","rtype":"promise"},{"name":"addLogMessage","rtype":"promise"},{"name":"didCrashDuringPreviousExecution","rtype":"promise"},{"name":"isEnabled","rtype":"promise"},{"name":"setContext","rtype":"promise"},{"name":"sendUnsentReports","rtype":"promise"},{"name":"addListener"},{"name":"setUserId","rtype":"promise"}]},{"name":"PrivacyScreen","methods":[{"name":"removeAllListeners","rtype":"promise"},{"name":"disable","rtype":"promise"},{"name":"enable","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"Device","methods":[{"name":"getLanguageCode","rtype":"promise"},{"name":"getInfo","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"getId","rtype":"promise"},{"name":"removeListener"},{"name":"getLanguageTag","rtype":"promise"},{"name":"addListener"},{"name":"getBatteryInfo","rtype":"promise"}]},{"name":"Keyboard","methods":[{"name":"getResizeMode","rtype":"promise"},{"name":"setAccessoryBarVisible","rtype":"promise"},{"name":"hide","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"setResizeMode","rtype":"promise"},{"name":"show","rtype":"promise"},{"name":"setStyle","rtype":"promise"},{"name":"removeListener"},{"name":"setScroll","rtype":"promise"},{"name":"addListener"}]},{"name":"FirebaseAnalytics","methods":[{"name":"setUserProperty","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeListener"},{"name":"logEvent","rtype":"promise"},{"name":"disable","rtype":"promise"},{"name":"enable","rtype":"promise"},{"name":"setSessionTimeoutDuration","rtype":"promise"},{"name":"setCollectionEnabled","rtype":"promise"},{"name":"setScreenName","rtype":"promise"},{"name":"reset","rtype":"promise"},{"name":"getAppInstanceId","rtype":"promise"},{"name":"addListener"},{"name":"setUserId","rtype":"promise"}]},{"name":"StatusBar","methods":[{"name":"hide","rtype":"promise"},{"name":"setBackgroundColor","rtype":"promise"},{"name":"setOverlaysWebView","rtype":"promise"},{"name":"getInfo","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"show","rtype":"promise"},{"name":"setStyle","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"PushNotifications","methods":[{"name":"listChannels","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"removeDeliveredNotifications","rtype":"promise"},{"name":"createChannel","rtype":"promise"},{"name":"getDeliveredNotifications","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeAllDeliveredNotifications","rtype":"promise"},{"name":"removeListener"},{"name":"deleteChannel","rtype":"promise"},{"name":"addListener"},{"name":"register","rtype":"promise"}]},{"name":"SignInWithApple","methods":[{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"echo","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"FCM","methods":[{"name":"removeAllListeners","rtype":"promise"},{"name":"getToken","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"deleteInstance","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"subscribeTo","rtype":"promise"},{"name":"unsubscribeFrom","rtype":"promise"},{"name":"isAutoInitEnabled","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"},{"name":"refreshToken","rtype":"promise"},{"name":"setAutoInit","rtype":"promise"}]},{"name":"Storage","methods":[{"name":"set","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"keys","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"clear","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"configure","rtype":"promise"},{"name":"removeListener"},{"name":"removeOld","rtype":"promise"},{"name":"remove","rtype":"promise"},{"name":"get","rtype":"promise"},{"name":"addListener"},{"name":"migrate","rtype":"promise"}]},{"name":"Clipboard","methods":[{"name":"read","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeListener"},{"name":"write","rtype":"promise"},{"name":"addListener"}]},{"name":"Haptics","methods":[{"name":"notification","rtype":"promise"},{"name":"selectionStart","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"selectionChanged","rtype":"promise"},{"name":"impact","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"selectionEnd","rtype":"promise"},{"name":"vibrate","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"CapacitorCookies","methods":[{"name":"deleteCookie","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"clearCookies","rtype":"promise"},{"name":"getCookies","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"clearAllCookies","rtype":"promise"},{"name":"setCookie","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"Share","methods":[{"name":"removeAllListeners","rtype":"promise"},{"name":"canShare","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"share","rtype":"promise"},{"name":"removeListener"},{"name":"addListener"}]},{"name":"CapacitorHttp","methods":[{"name":"patch","rtype":"promise"},{"name":"request","rtype":"promise"},{"name":"post","rtype":"promise"},{"name":"removeAllListeners","rtype":"promise"},{"name":"get","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeListener"},{"name":"delete","rtype":"promise"},{"name":"put","rtype":"promise"},{"name":"addListener"}]},{"name":"Browser","methods":[{"name":"removeAllListeners","rtype":"promise"},{"name":"checkPermissions","rtype":"promise"},{"name":"requestPermissions","rtype":"promise"},{"name":"removeListener"},{"name":"close","rtype":"promise"},{"name":"open","rtype":"promise"},{"name":"addListener"}]}];\n} catch(error) {\n    console.log(error)\n}\n\n\n\n\n'}}):null]})]})}},62403:function(e,n,t){var o=t(52408),i=t(16064),r=t(96230);let a=(0,i.Ue)(e=>({isLoading:!1,isSidebarOpen:!1,isBannerVisible:!1,mode:"user",writeProperty:n=>{"function"==typeof n?e(e=>n(e)):e(n)}}));!r.Mw&&r.kc&&(0,o.y)("LayoutStore",a),n.Z=a},25846:function(e,n,t){t.d(n,{X:function(){return r}});var o=t(52983),i=t(1155);function r(e,n){let t=(0,i.Z)(e,n),[r,a]=(0,i.Z)("__ssready");(0,o.useEffect)(()=>{r||a(!0)},[r,a]);let s=(0,o.useMemo)(()=>({value:t[0],setValue:t[1],operations:t[2]}),[t]);return r?s:null}},52071:function(e,n,t){t.d(n,{v:function(){return r}});var o=t(96230),i=t(73400);function r(e){let{authToken:n}=e;try{let e=JSON.parse((0,o.ID)(n.split(".")[1]));localStorage.setItem(o.Tt,n),(0,i.setCookie)(null,"AUTH_TOKEN",n,{maxAge:Number(e.exp-Date.now()/1e3),path:"/"}),window.localStorage.setItem(o.Tt,n)}catch(e){console.error("Error with setAuthDataIntoBrowserStorage",e)}}},55176:function(e,n,t){t.d(n,{j:function(){return v}});var o=t(78949),i=t(3384),r=t(42016),a=t(96230),s=t(49335);let c="user",p="get-self-pro-membership-details",l="".concat(c,"-").concat(p),u=e=>({context:{namespace:c,functionName:p},data:e}),m=async e=>{let n;let t=u(e),o=(0,s.R9)()||null,c=(0,s.Qv)()||null,p=(0,a.gc)()||null;try{n=await i.ZP.request({method:"POST",baseURL:(0,r.hV)(),data:{organizationId:o,fermionSchoolId:c,authToken:p,data:[t]}}).then(e=>e.data).then(e=>{var n;return(null===(n=e.at(0))||void 0===n?void 0:n.output)||null})}catch(e){throw{errorMessage:(null==e?void 0:e.message)||"Something went wrong while making this request. Please try again or contact support@codedamn.com",isNetworkError:!0}}if(!n)throw{errorMessage:"Something went wrong while making this request. Please try again or contact support@codedamn.com",isNetworkError:!1};if("ok"===n.status)return n.data;throw{...n,isNetworkError:!1}},d=async e=>{let{data:n,forceOverrideAuthToken:t,shouldEnableBatching:o=!0}=e;if(!o)return await m(n);{let e=u(n),o=(0,r.NZ)(n),i=(0,s.R9)()||null,c=(0,s.Qv)()||null,p=t||(0,a.gc)()||null;return await r.CX.fetch({batchingUniqueKey:o,organizationId:i,fermionSchoolId:c,authToken:p,data:e}).then(e=>e)}},v=(e,n)=>(0,o.a)({queryKey:[l,u(e)],queryFn:()=>d({data:e}),...null!=n?n:{}})},24737:function(e,n,t){t.d(n,{A:function(){return r}});var o=t(97458),i=t(14517);let r=e=>{let{className:n,dangerouslySetHtmlContentWhichIsConvertedFromMarkdown:t}=e;return(0,o.jsx)("div",{className:(0,i.default)(n||"prose !max-w-none"),dangerouslySetInnerHTML:{__html:t}})}},37710:function(e,n,t){t.d(n,{z:function(){return p}});var o=t(97458),i=t(52983),r=t(25925),a=t(57291),s=t(87235);let c=(0,a.j)("inline-flex relative items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",{variants:{variant:{default:"bg-primary-600 text-primary-foreground shadow hover:bg-primary-800 dark:text-white",destructive:"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90 dark:text-white",outline:"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground dark:text-white",secondary:"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",ghost:"hover:bg-accent hover:text-accent-foreground",link:"text-primary-600 underline-offset-4 hover:underline"},size:{default:"h-9 px-4 py-2",sm:"h-8 rounded-md px-3 text-xs",lg:"h-10 rounded-md px-8",icon:"h-9 w-9"}},defaultVariants:{variant:"default",size:"default"}}),p=i.forwardRef((e,n)=>{let{className:t,variant:i,size:a,asChild:p=!1,...l}=e,u=p?r.g7:"button";return(0,o.jsx)(u,{className:(0,s.cn)(c({variant:i,size:a,className:t})),ref:n,...l})});p.displayName="Button"},87235:function(e,n,t){t.d(n,{cn:function(){return r}});var o=t(14517),i=t(69109);function r(){for(var e=arguments.length,n=Array(e),t=0;t<e;t++)n[t]=arguments[t];return(0,i.m)((0,o.clsx)(n))}},3752:function(e,n,t){t.d(n,{A:function(){return s},GO:function(){return i},a1:function(){return a},p5:function(){return r},x7:function(){return o.x7}});var o=t(34549);let i=e=>{o.Am.success(e,{className:"!max-w-none [&_*]:!max-w-none",position:"bottom-right"})},r=e=>{o.Am.warning(e,{className:"!max-w-none [&_*]:!max-w-none",position:"bottom-right"})},a=e=>{o.Am.info(e,{className:"!max-w-none [&_*]:!max-w-none",position:"bottom-right"})},s=(e,n)=>{o.Am.error(e,{className:"!max-w-none [&_*]:!max-w-none",position:"bottom-right",duration:n})}},64112:function(e,n,t){t.d(n,{M:function(){return f}});var o=t(78949),i=t(3384),r=t(42016),a=t(96230),s=t(49335);let c="user",p="get-self-full-user-data",l="".concat(c,"-").concat(p),u=e=>({context:{namespace:c,functionName:p},data:e}),m=async e=>{let n;let t=u(e),o=(0,s.R9)()||null,c=(0,s.Qv)()||null,p=(0,a.gc)()||null;try{n=await i.ZP.request({method:"POST",baseURL:(0,r.hV)(),data:{organizationId:o,fermionSchoolId:c,authToken:p,data:[t]}}).then(e=>e.data).then(e=>{var n;return(null===(n=e.at(0))||void 0===n?void 0:n.output)||null})}catch(e){throw{errorMessage:(null==e?void 0:e.message)||"Something went wrong while making this request. Please try again or contact support@codedamn.com",isNetworkError:!0}}if(!n)throw{errorMessage:"Something went wrong while making this request. Please try again or contact support@codedamn.com",isNetworkError:!1};if("ok"===n.status)return n.data;throw{...n,isNetworkError:!1}},d=async e=>{let{data:n,forceOverrideAuthToken:t,shouldEnableBatching:o=!0}=e;if(!o)return await m(n);{let e=u(n),o=(0,r.NZ)(n),i=(0,s.R9)()||null,c=(0,s.Qv)()||null,p=t||(0,a.gc)()||null;return await r.CX.fetch({batchingUniqueKey:o,organizationId:i,fermionSchoolId:c,authToken:p,data:e}).then(e=>e)}},v=(e,n)=>(0,o.a)({queryKey:[l,u(e)],queryFn:()=>d({data:e}),...null!=n?n:{}});var w=t(52983);let f=e=>{let{shouldGetRealtimeUserData:n}=e||{},{data:t,isLoading:o,refetch:i}=v({shouldTryFastCacheAccess:!0!==n},{enabled:(null==e?void 0:e.isDisabled)!==!0});return(0,w.useMemo)(()=>o?{state:"unknown",refetch:i}:(null==t?void 0:t.response)!=null?{state:"authorized",data:t.response,refetch:i}:{state:"unauthorized",refetch:i},[null==t?void 0:t.response,o,i])}},38759:function(e,n,t){t.d(n,{_:function(){return r}});var o=t(52983),i=t(12671);function r(e,n){let t=(0,i.Z)(e,n),[r,a]=(0,i.Z)("__lsready");(0,o.useEffect)(()=>{r||a(!0)},[r,a]);let s=(0,o.useMemo)(()=>({value:t[0],setValue:t[1],operations:t[2]}),[t]);return r?s:null}},60443:function(e,n,t){t.d(n,{v:function(){return r}});var o=t(336),i=t(52983);function r(e){var n;let{history:t="replace",parse:r=e=>e,serialize:a=String,defaultValue:s}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{history:"replace",parse:e=>e,serialize:String,defaultValue:void 0},c=(0,o.useRouter)(),p=(0,i.useMemo)(()=>"push"===t?c.push:c.replace,[t]),l=(0,i.useCallback)(()=>{let n=new URLSearchParams(window.location.search).get(e);return null!==n?r(n):null},[]),u=(0,i.useMemo)(l,[c.query[e]]),m=(0,i.useCallback)((n,t)=>{var o,i;let r=null!==(i=null!==(o=l())&&void 0!==o?o:s)&&void 0!==i?i:null,u="function"==typeof n?n(r):n,m=new URLSearchParams(window.location.search);null===u?m.delete(e):m.set(e,a(u));let d=m.toString(),v=window.location.hash;return p.call(c,{pathname:c.pathname,hash:v,search:d},{pathname:window.location.pathname,hash:v,search:d},t)},[e,p]);return[null!==(n=null!=u?u:s)&&void 0!==n?n:null,m]}},74222:function(e,n,t){t.d(n,{o:function(){return s}});var o=t(52983),i=t(55176),r=t(96230),a=t(64112);let s=e=>{let{shouldSkip:n,shouldAlsoGetPastProMembership:t,shouldApplyAdditionalBufferTime:s}=e,c=(0,a.M)(),[p,l]=(0,o.useState)({isLoading:!0}),{data:u}=(0,i.j)({shouldAlsoGetPastProMembership:t,shouldApplyAdditionalBufferTime:s},{enabled:"authorized"===c.state&&!n});return(0,o.useEffect)(()=>{u?"membership-found"===u.response.status?l({isLoading:!1,selfProMembershipDetails:u.response.data}):"membership-not-found"===u.response.status?l({isLoading:!1,selfProMembershipDetails:null}):(0,r.Yk)(u.response):"unauthorized"===c.state?l({isLoading:!1,selfProMembershipDetails:null}):l({isLoading:!0})},[u,c]),p}}}]);